{
	"info": {
		"_postman_id": "segra-api-collection-001",
		"name": "Segra 3PL API",
		"description": "Postman collection for Segra 3PL Experience API endpoints. Used to send Transfer Order acknowledgements back to Segra after processing in D365.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Transfer Order Acknowledgement",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{segraAccessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "client_id",
						"value": "{{segraClientId}}",
						"type": "text"
					},
					{
						"key": "client_secret",
						"value": "{{segraClientSecret}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"TransferOrderNumber\": \"TO-00000021\",\n    \"TransferOrderLines\": [\n        {\n            \"LineNumber\": 1,\n            \"Seg_ExternalOrderNumber\": \"SO000561289\",\n            \"Seg_ExternalLineNumber\": 1\n        },\n        {\n            \"LineNumber\": 2,\n            \"Seg_ExternalOrderNumber\": \"SO000561289\",\n            \"Seg_ExternalLineNumber\": 2\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{segraBaseUrl}}/api/transferOrderAck",
					"host": [
						"{{segraBaseUrl}}"
					],
					"path": [
						"api",
						"transferOrderAck"
					]
				},
				"description": "Sends Transfer Order acknowledgement to Segra, mapping Segra's Transfer Order to MDSi's D365 Sales Order.\n\n**Authentication:**\n- OAuth 2.0 Client Credentials flow\n- Access token obtained from https://sso.segra.com/as/token.oauth2\n- Bearer token in Authorization header\n- client_id and client_secret in request headers\n\n**Request Body:**\n- `TransferOrderNumber`: Original Transfer Order number from Segra\n- `TransferOrderLines`: Array of line mappings\n  - `LineNumber`: Original Transfer Order line number\n  - `Seg_ExternalOrderNumber`: MDSi's D365 Sales Order number\n  - `Seg_ExternalLineNumber`: MDSi's Sales Order line number\n\n**Responses:**\n- 200 OK: Acknowledgement received successfully\n- 401 Unauthorized: Authentication failed\n- 500 Internal Server Error: Server error\n\n**Environment Variables Required:**\n- `segraBaseUrl`: Segra API base URL (varies by environment)\n- `segraClientId`: OAuth client ID\n- `segraClientSecret`: OAuth client secret\n- `segraAccessToken`: OAuth access token (obtained separately)\n"
			},
			"response": []
		},
		{
			"name": "Get OAuth Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Extract access token from response and set it as environment variable",
							"var jsonData = pm.response.json();",
							"if (jsonData.access_token) {",
							"    pm.environment.set(\"segraAccessToken\", jsonData.access_token);",
							"    console.log(\"Access token saved to segraAccessToken variable\");",
							"} else {",
							"    console.log(\"No access token found in response\");",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{segraClientId}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{segraClientSecret}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://sso.segra.com/as/token.oauth2",
					"protocol": "https",
					"host": [
						"sso",
						"segra",
						"com"
					],
					"path": [
						"as",
						"token.oauth2"
					]
				},
				"description": "Obtains an OAuth 2.0 access token using Client Credentials flow.\n\n**Grant Type:** client_credentials\n\n**Required Parameters:**\n- `client_id`: OAuth client ID (from Segra)\n- `client_secret`: OAuth client secret (from Segra)\n\n**Response:**\nReturns an access token that will be automatically saved to the `segraAccessToken` environment variable via the test script.\n\n**Usage:**\n1. Run this request first to get an access token\n2. The token will be automatically saved and used in subsequent API calls\n3. Token will be available in the Authorization header as Bearer token"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": []
}
