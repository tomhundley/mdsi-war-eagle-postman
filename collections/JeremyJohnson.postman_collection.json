{
	"info": {
		"_postman_id": "jeremy-johnson-collection-001",
		"name": "FDD-2120 Transfer Orders Step 4: Failure Handler (Jeremy Johnson)",
		"description": "Postman collection for Jeremy Johnson Azure Function App - Failure handler service that processes failed transfer order integrations from D365, logs error events, updates audit trails with failure information, and triggers downstream notification services for alerts. Version is managed by scripts/build/set-version.sh using semantic versioning (0.1.N auto-increment).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Diagnostics",
			"item": [
				{
					"name": "Heartbeat",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/heartbeat?code={{jeremyJohnsonFunctionKey}}",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "heartbeat"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Health check endpoint - returns HTTP 200 if the function app is running"
					},
					"response": []
				},
				{
					"name": "Version (Full JSON)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/version?code={{jeremyJohnsonFunctionKey}}",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "version"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Returns comprehensive version information as JSON object including version, environment, build timestamp, and runtime details. Version is set by the build script (scripts/build/set-version.sh) using semantic versioning (e.g., 0.1.5)"
					},
					"response": []
				},
				{
					"name": "Version (Simple String)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/version?code={{jeremyJohnsonFunctionKey}}&format=simple",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "version"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								},
								{
									"key": "format",
									"value": "simple",
									"description": "Returns simple string format"
								}
							]
						},
						"description": "Returns the application name and version as a simple string (e.g., 'jeremy-johnson-dev v0.1.5')"
					},
					"response": []
				},
				{
					"name": "Version (Number Only)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/version?code={{jeremyJohnsonFunctionKey}}&format=version",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "version"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								},
								{
									"key": "format",
									"value": "version",
									"description": "Returns version number only"
								}
							]
						},
						"description": "Returns just the version number as a string (e.g., '0.1.5')"
					},
					"response": []
				},
				{
					"name": "Version (Legacy - with API name)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/version?code={{jeremyJohnsonFunctionKey}}&includeApiName=true",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "version"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								},
								{
									"key": "includeApiName",
									"value": "true",
									"description": "Legacy parameter - use format=simple instead"
								}
							]
						},
						"description": "Legacy endpoint - Returns the application name and version. Maintained for backward compatibility. Use 'format=simple' instead."
					},
					"response": []
				},
				{
					"name": "Exception Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/exceptionTest?code={{jeremyJohnsonFunctionKey}}",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "exceptionTest"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Triggers a test exception to validate exception handling and logging"
					},
					"response": []
				},
				{
					"name": "Log Test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Test log message from Postman\"\n}"
						},
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/logTest?code={{jeremyJohnsonFunctionKey}}",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "logTest"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Tests logging functionality. Send a POST request with JSON body containing a message property"
					},
					"response": []
				},
				{
					"name": "Service Bus Connectivity Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/serviceBusConnectivityTest?code={{jeremyJohnsonFunctionKey}}",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "serviceBusConnectivityTest"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Tests connectivity to the Tiger Transit Service Bus. Validates connection string and topic configuration. Returns status, topic name, and success message."
					},
					"response": []
				},
				{
					"name": "Cosmos DB Connectivity Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jeremyJohnsonBaseUrl}}/api/diagnostics/cosmosDbConnectivityTest?code={{jeremyJohnsonFunctionKey}}",
							"host": ["{{jeremyJohnsonBaseUrl}}"],
							"path": ["api", "diagnostics", "cosmosDbConnectivityTest"],
							"query": [
								{
									"key": "code",
									"value": "{{jeremyJohnsonFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Tests connectivity to the Jordan Hare Stadium Cosmos DB database. Returns connection status, database name, container information, and partition key paths"
					},
					"response": []
				}
			],
			"description": "Diagnostic and health check endpoints for monitoring and testing the Jeremy Johnson function app. Version information comes from assembly metadata set during build (scripts/build/set-version.sh)."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "jeremyJohnsonBaseUrl",
			"value": "https://func-jeremyjohnson-dev.azurewebsites.net",
			"type": "string"
		},
		{
			"key": "jeremyJohnsonFunctionKey",
			"value": "",
			"type": "string"
		}
	]
}
