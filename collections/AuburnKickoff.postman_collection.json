{
	"info": {
		"_postman_id": "auburn-kickoff-collection-001",
		"name": "FDD-2120 Step 1 - Transfer Order Notices - Trigger (Auburn Kickoff)",
		"description": "Postman collection for Auburn Kickoff Azure Function App - HTTP API for receiving Transfer Orders from Segra and publishing to Service Bus. Version is managed by scripts/build/set-version.sh using semantic versioning (0.1.N auto-increment).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Get Auth0 Token (MDSI)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract access token from response and save to environment variable",
									"if (pm.response.code === 200) {",
									"    const jsonData = pm.response.json();",
									"    if (jsonData.access_token) {",
									"        pm.environment.set('auth0_bearer_token', jsonData.access_token);",
									"        console.log('✅ Auth0 token saved to auth0_bearer_token');",
									"        console.log('Token expires in:', jsonData.expires_in, 'seconds');",
									"    }",
									"}",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has access_token', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"{{auth0_client_id}}\",\n  \"client_secret\": \"{{auth0_client_secret}}\",\n  \"audience\": \"{{auth0_audience}}\",\n  \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{auth0_token_url}}",
							"host": ["{{auth0_token_url}}"]
						},
						"description": "Obtain Auth0 bearer token for Auburn Kickoff API authentication using MDSi Cloud City Auth0 tenant.\n\n**Environment-Specific URLs:**\n- DEV: https://mdsi-cloud-city-dev.auth0.com/oauth/token\n- UAT: https://mdsi-cloud-city-uat.auth0.com/oauth/token\n- PRD: https://mdsi-cloud-city-prd.auth0.com/oauth/token\n\n**Required Environment Variables:**\n- `auth0_token_url`: Full Auth0 token endpoint URL\n- `auth0_client_id`: OAuth client ID (environment-specific)\n- `auth0_client_secret`: OAuth client secret (provided separately)\n- `auth0_audience`: API audience (e.g., https://segra-integration-dev.mdsiinc.com)\n\n**Response:**\nThe access token is automatically saved to `auth0_bearer_token` environment variable and used for subsequent API requests.\n\n**Token Expiration:**\nTokens expire after 24 hours (86400 seconds). Re-run this request to obtain a fresh token when expired."
					},
					"response": []
				}
			],
			"description": "Auth0 authentication endpoints for obtaining bearer tokens"
		},
		{
			"name": "Transfer Orders",
			"item": [
				{
					"name": "Submit Transfer Order (Test Data)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth0_bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"TransferOrderNumber\": \"TO-2025-10-13.1\",\n    \"LineNumber\": 1,\n    \"DeliveryModeCode\": \"Standard\",\n    \"ExternalLineNumber\": \"EXT-LINE-001\",\n    \"ExternalOrderNumber\": \"12345\",\n    \"InventoryUnitSymbol\": \"ea\",\n    \"ItemNumber\": \"PHNAVAIP9608G\",\n    \"ReceivingAddressName\": \"Greenbrier Distribution Center - Charleston, WV\",\n    \"ReceivingWarehouseID\": \"1200Greenbrier\",\n    \"TransferQuantity\": 10\n  },\n  {\n    \"TransferOrderNumber\": \"TO-2025-10-13.1\",\n    \"LineNumber\": 2,\n    \"DeliveryModeCode\": \"Standard\",\n    \"ExternalLineNumber\": \"EXT-LINE-002\",\n    \"ExternalOrderNumber\": \"12345\",\n    \"InventoryUnitSymbol\": \"ea\",\n    \"ItemNumber\": \"705180505\",\n    \"ReceivingAddressName\": \"North Cedar Distribution - Knoxville, TN\",\n    \"ReceivingWarehouseID\": \"230NCEDAR\",\n    \"TransferQuantity\": 2\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/transferOrders?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "transferOrders"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Submit a Transfer Order to Auburn Kickoff using the new flattened array payload structure. This endpoint authenticates via Auth0, validates the payload, logs to CosmosDB, and publishes to Service Bus.\n\n**Payload Structure:** Array of line items (flattened structure)\n\n**Validation Rules:**\n- Array cannot be empty\n- All TransferOrderNumbers must be identical\n- All fields are required\n\n**Test Data (Segra Item Numbers):**\n- Segra Item: PHNAVAIP9608G → MDSi translates to: 700507946 (IP TELEPHONE 9608G GRAY GIGABIT ETHERNET)\n- Segra Item: 705180505 → MDSi translates to: NC-55-32T16Q4H-AT (CISCO NCS 5500 SERIES 48-PORT LINE CARD)\n\n**Item Number Translation:** Auburn Kickoff receives Segra item numbers. Auburn Wire (downstream) translates them to MDSi manufacturer part numbers.\n\n**Response:** HTTP 202 Accepted with acceptance message, transferOrderNumber, correlationId, and lineCount\n\n**CosmosDB Audit:** Logs to war-eagle-db-01/kick-six-express"
					},
					"response": []
				},
				{
					"name": "Submit Transfer Order (Multiple Products)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth0_bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"TransferOrderNumber\": \"TO-2025-{{$randomInt}}\",\n    \"LineNumber\": 1,\n    \"DeliveryModeCode\": \"Expedited\",\n    \"ExternalLineNumber\": \"EXT-{{$randomInt}}\",\n    \"ExternalOrderNumber\": \"{{$randomInt}}\",\n    \"InventoryUnitSymbol\": \"ea\",\n    \"ItemNumber\": \"PHNAVAIP9608G\",\n    \"ReceivingAddressName\": \"Fountains Distribution - Charlotte, NC\",\n    \"ReceivingWarehouseID\": \"3900Fountains\",\n    \"TransferQuantity\": 25\n  },\n  {\n    \"TransferOrderNumber\": \"TO-2025-{{$randomInt}}\",\n    \"LineNumber\": 2,\n    \"DeliveryModeCode\": \"Expedited\",\n    \"ExternalLineNumber\": \"EXT-{{$randomInt}}\",\n    \"ExternalOrderNumber\": \"{{$randomInt}}\",\n    \"InventoryUnitSymbol\": \"ea\",\n    \"ItemNumber\": \"705180505\",\n    \"ReceivingAddressName\": \"Fountains Distribution - Charlotte, NC\",\n    \"ReceivingWarehouseID\": \"3900Fountains\",\n    \"TransferQuantity\": 5\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/transferOrders?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "transferOrders"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Submit a Transfer Order with dynamic test data using Postman variables (flattened array structure).\n\n**Uses Postman Dynamic Variables:**\n- $randomInt: Random integer for unique reference numbers\n- $randomFullName: Random name for distribution center\n\n**Note:** Ensure both lines have the SAME TransferOrderNumber value when testing manually"
					},
					"response": []
				},
				{
					"name": "Submit Transfer Order - SEGR003 (via env var)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth0_bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"TransferOrderNumber\": \"TO-SEGR003-{{$randomInt}}\",\n    \"LineNumber\": 1,\n    \"DeliveryModeCode\": \"Standard\",\n    \"ExternalLineNumber\": \"SEGR003-EXT-001\",\n    \"ExternalOrderNumber\": \"67890\",\n    \"InventoryUnitSymbol\": \"ea\",\n    \"ItemNumber\": \"PHNAVAIP9608G\",\n    \"ReceivingAddressName\": \"Hadley Distribution - Overland Park, KS\",\n    \"ReceivingWarehouseID\": \"5022Hadley\",\n    \"TransferQuantity\": 15\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/transferOrders?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "transferOrders"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Submit Transfer Order with SEGR003 prefix using flattened array structure (divisionErpId is now set to SEGR003 via environment variable)"
					},
					"response": []
				},
				{
					"name": "Submit Transfer Order - Alternative Test Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth0_bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"TransferOrderNumber\": \"TO-SEGR003-{{$randomInt}}\",\n    \"LineNumber\": 1,\n    \"DeliveryModeCode\": \"Expedited\",\n    \"ExternalLineNumber\": \"SEGR003-ALT-001\",\n    \"ExternalOrderNumber\": \"54321\",\n    \"InventoryUnitSymbol\": \"ea\",\n    \"ItemNumber\": \"705180505\",\n    \"ReceivingAddressName\": \"Summers Warehouse - Charleston, WV\",\n    \"ReceivingWarehouseID\": \"500Summers\",\n    \"TransferQuantity\": 3\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/transferOrders?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "transferOrders"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Submit Transfer Order with alternative warehouse using flattened array structure (divisionErpId is now set to SEGR003 via environment variable)"
					},
					"response": []
				}
			],
			"description": "Transfer Order submission endpoints. Requires Auth0 bearer token with 'create:transfer-orders' permission."
		},
		{
			"name": "Diagnostics",
			"item": [
				{
					"name": "Heartbeat",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/heartbeat?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "heartbeat"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Health check endpoint - returns HTTP 200 if the function app is running"
					},
					"response": []
				},
				{
					"name": "Version (Full JSON)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/version?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "version"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Returns comprehensive version information as JSON object including version, environment, build timestamp, and runtime details. Version is set by the build script (scripts/build/set-version.sh) using semantic versioning (e.g., 0.1.5)"
					},
					"response": []
				},
				{
					"name": "Version (Simple String)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/version?code={{auburnKickoffFunctionKey}}&format=simple",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "version"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								},
								{
									"key": "format",
									"value": "simple",
									"description": "Returns simple string format"
								}
							]
						},
						"description": "Returns the application name and version as a simple string (e.g., 'auburn-kickoff-dev v0.1.5')"
					},
					"response": []
				},
				{
					"name": "Version (Number Only)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/version?code={{auburnKickoffFunctionKey}}&format=version",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "version"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								},
								{
									"key": "format",
									"value": "version",
									"description": "Returns version number only"
								}
							]
						},
						"description": "Returns just the version number as a string (e.g., '0.1.5')"
					},
					"response": []
				},
				{
					"name": "Version (Legacy - with API name)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/version?code={{auburnKickoffFunctionKey}}&includeApiName=true",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "version"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								},
								{
									"key": "includeApiName",
									"value": "true",
									"description": "Legacy parameter - use format=simple instead"
								}
							]
						},
						"description": "Legacy endpoint - Returns the application name and version. Maintained for backward compatibility. Use 'format=simple' instead."
					},
					"response": []
				},
				{
					"name": "Exception Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/exceptionTest?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "exceptionTest"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Triggers a test exception to validate exception handling and logging"
					},
					"response": []
				},
				{
					"name": "Custom HTTP Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/customHttpStatus/418/I'm a teapot?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "customHttpStatus", "418", "I'm a teapot"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Returns a custom HTTP status code with a custom message. Format: /customHttpStatus/{statusCode}/{message}"
					},
					"response": []
				},
				{
					"name": "Log Test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Test log message from Postman\"\n}"
						},
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/logTest?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "logTest"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Tests logging functionality. Send a POST request with JSON body containing a message property"
					},
					"response": []
				},
				{
					"name": "Service Bus Connectivity Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/serviceBusConnectivityTest?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "serviceBusConnectivityTest"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Tests connectivity to the Tiger Transit Service Bus. Validates connection string and topic configuration. Returns status, topic name, and success message."
					},
					"response": []
				},
				{
					"name": "Cosmos DB Connectivity Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auburnKickoffBaseUrl}}/api/diagnostics/cosmosDbConnectivityTest?code={{auburnKickoffFunctionKey}}",
							"host": ["{{auburnKickoffBaseUrl}}"],
							"path": ["api", "diagnostics", "cosmosDbConnectivityTest"],
							"query": [
								{
									"key": "code",
									"value": "{{auburnKickoffFunctionKey}}",
									"description": "Function authorization key"
								}
							]
						},
						"description": "Tests connectivity to the Jordan Hare Stadium Cosmos DB database and containers (Kick Six Express). Returns connection status, database name, container information, and partition key paths"
					},
					"response": []
				}
			],
			"description": "Diagnostic and health check endpoints for monitoring and testing the Auburn Kickoff function app. Version information comes from assembly metadata set during build (scripts/build/set-version.sh)."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "auburnKickoffBaseUrl",
			"value": "https://func-auburnkickoff-dev.azurewebsites.net",
			"type": "string"
		},
		{
			"key": "auburnKickoffFunctionKey",
			"value": "",
			"type": "string"
		}
	]
}
